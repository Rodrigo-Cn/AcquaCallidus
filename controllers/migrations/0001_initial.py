# Generated by Django 5.1.7 on 2025-07-13 03:00

import controllers.models
import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('culturesvegetables', '0003_rename_phase_emerging_kc_culturevegetable_phase_flowering_kc_and_more'),
        ('geolocations', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Controller',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60)),
                ('device', models.CharField(max_length=60)),
                ('battery_percentage', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('microcontrolador_code', models.TextField(blank=True, help_text='Código exclusivo de integração com o microcontrolador', null=True)),
                ('security_code', models.CharField(default=controllers.models.generate_security_code, editable=False, max_length=32, unique=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('valves', models.PositiveIntegerField(help_text='Quantidade de válvulas operando', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(8)])),
                ('valve_operating', models.PositiveSmallIntegerField(blank=True, help_text='Número da válvula que está operando (1 a 8)', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(8)])),
                ('plants_per_valve', models.PositiveIntegerField(help_text='Quantidade de plantas/vegetais irrigados por válvula')),
                ('irrigation_radius', models.FloatField(help_text='Raio de cobertura da irrigação em metros')),
                ('phase_vegetable', models.PositiveSmallIntegerField(choices=[(1, 'Inicial'), (2, 'Vegetativa'), (3, 'Floração'), (4, 'Frutificação'), (5, 'Maturação')], help_text='Fase do cultivo no momento da irrigação')),
                ('status', models.BooleanField(default=False)),
                ('last_irrigation', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('culturevegetable', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='culturesvegetables.culturevegetable')),
                ('geolocation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='geolocations.geolocation')),
            ],
        ),
        migrations.CreateModel(
            name='IrrigationController',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True)),
                ('time', models.TimeField(auto_now_add=True)),
                ('total_liters', models.FloatField(help_text='Total de litros de água utilizados na irrigação')),
                ('valves_used', models.PositiveSmallIntegerField(help_text='Quantidade de válvulas utilizadas na irrigação do dia', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(8)])),
                ('plants_per_valve', models.PositiveIntegerField(help_text='Quantidade de plantas/vegetais irrigados por válvula')),
                ('irrigation_radius', models.FloatField(help_text='Raio de cobertura da irrigação em metros')),
                ('phase_vegetable', models.PositiveSmallIntegerField(choices=[(1, 'Inicial'), (2, 'Vegetativa'), (3, 'Floração'), (4, 'Frutificação'), (5, 'Maturação')], help_text='Fase do cultivo no momento da irrigação')),
                ('controller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='irrigations', to='controllers.controller')),
                ('culturevegetable', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='culturesvegetables.culturevegetable')),
                ('geolocation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='geolocations.geolocation')),
            ],
        ),
    ]
